10/6/2021

There are 7 topics that I'll need to study so far.
GraphQL might be a topic for later, but we'll see.

This is about 3.5 hours of studying per day.
These are all rather black hole topics.

I can fit in most of this studying in the morning and some in the afternoon.
I'll have about 3.5 hours to get work on the actual site then.

I took away most of the other things. It might be a good idea for me to simply do right now.

I'll need to know enough information to transition React Context to the Apollo Provider.
I may want to actually do the chapter in the book for this.

Apollo implementation is going to be easier than I thought since I'm not going to implement their state
management library, just their graphql query functionality.

I don't want to step on my teammates toes.
I'd rather that everyone struggle and learn than for me to get ahead in the application.

10/14/2021

Alright, it's time for me to become a master of production.
I will need to:

- create a production build of my code and figure out what this means
- run a production build from docker
- run a production build from jelastic

There is a ton to do.

10/18/2021

I'm going to need to learn how to use nginx really well...
Alright so I can deploy using docker compose from the github repo.
This makes things simple.

I'll need to create a docker compose file that runs production build of the website from nginx.

This is the main plan.

+ 1. Create a production build of the website.
- 1. Install nginx on a docker container and check out the website online. Play around with it.
- 1. Check out how data should be stored on a docker container. Volumes or no.
- 1. Check out how host from gunicorn as well as handle CORS
- 2. Host the website locally from a docker container with nginx. Make database configurations as well.
- 3. Host the website from jelastic using docker-compose.

What I'll need to:

- create a separate branch for building production mode

- Backend
    - install gunicorn on backend
    - configure django settings to host site from gunicorn
- DB
    - figure out how to serve the backend data to django and how to save it
- Frontend
    - yarn build in Frontend folder
    - install nginx on Frontend container

Oct 19
- set up nginx on docker container for the frontend

20
- create presentation and document
- research volumes

21
- set up gunicorn on backend docker container

22
- set up database and volumes on docker container

23
- set up jelastic docker compose

10/24/2021

nginx and gunicorn are set up but in setting them I learned of limitations that will prevent hosting on jelastic in the near future.
I'll worry about those later.
For now, I'll need to rip out the useReducer() state manager with Apollo.
It's a monster of my own creation, but it's an opponent worthy of my final week prior to presentation.

10/28/2021

I'd like to get out one feature per week at a working cap of 4 hours per day working on the application.
Things I'll need to work on:

1. Change the state management system to Apollo
2. Set up graphql queries to the backend.
3. Find and set up a 3rd-party database service that you'd like to use for django
4. Create application data.
5. Make Gender component stateful.
6. Add a second gender component for whoever you're looking for.
7. Make Proximity component stateful.
8. Results Component
9. Chat component
10. Host site online. Learn about networking.
11. Add SSL certificate.
12. ufw security
13. HAproxy or nginx load-balancing.
14. Login page, logout page, forgot password page, forgot username page, user authentication and emails.
15. Google maps cluster results (if you can).
16. Incorporate Stripe payment services.
17. Improve CSS
18. Marketing
19. Write jest, cypress, and django tests

